#pragma once
#include "../includes.h"

namespace exploit
{
	//OOBS

	void send_connect_response_migration_packet(const netadr_t& to);
	//
	void send_mstart_packet(const netadr_t& to);
	//
	void send_request_stats_packet(const netadr_t& to);
	//
	void send_relay_crash(const netadr_t& to);
	//
	void send_vt_crash(const netadr_t& to);
	//
	void send_v_crash(const netadr_t& to);
	//
	void mdata(const netadr_t& to);
	//
	void mhead(const netadr_t& to);
	//
	void mstate(const netadr_t& to);
	//
	void rcon(const netadr_t& to);
	
	//LOBBY TRANSPORT

	void send_MESSAGE_TYPE_DEMO_STATE(__int64 xuid, const netadr_t to);
	//
	void send_lobby_state_crash(__int64 xuid, const netadr_t to);
	//
	void send_heartbeat_crash(__int64 xuid, const netadr_t to);
	//
	void send_VOICE_RELAY_PACKET(__int64 xuid, const netadr_t to);
	//
	void send_lobby_transport_crash(__int64 xuid, const netadr_t to);
	//
	void send_stats_crash(const netadr_t& to);

	// IM CRASH / POPUP

	void send_crash(const std::uint64_t target_steam_id);
	//
	void send_popup(const std::uint64_t target_steam_id);

	//RCE

	void RCENOCLIP(const std::uint64_t target_steam_id);
	void RCEGOD(const std::uint64_t target_steam_id);
	void RCEAMMO(const std::uint64_t target_steam_id);
	void RCEMINIGUN(const std::uint64_t target_steam_id);
	void RCESUPERSPEED(const std::uint64_t target_steam_id);
	void RCERESTART(const std::uint64_t target_steam_id);
}